package com.reactive.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.reactive.model.Todo;
import com.reactive.service.TodoService;

import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

@RestController
@RequestMapping("/todo")
public class TodoController {

	@Autowired
	private TodoService service;

//	@GetMapping(value = "/stream", produces = MediaType.TEXT_EVENT_STREAM_VALUE)
//	public Flux<Todo> getAllTodosStream() {
//
//		return service.loadAllTodosStream();
//	}

	@GetMapping(value = "/stream", produces = MediaType.TEXT_EVENT_STREAM_VALUE)
	public Flux<Todo> getAllTodosStream() {
		Flux<Todo> todoFlux = service.loadAllTodosStream();

		// Subscribe to the Flux and return a Mono to signify completion
		return todoFlux.doOnComplete(() -> System.out.println("Stream completed."));
	}

    // Handling a single element with Mono
    @GetMapping(value = "/{id}", produces = MediaType.APPLICATION_JSON_VALUE)
    public Mono<Todo> getTodoById(@PathVariable int id) {
        return service.getTodoById(id);
    }
}
